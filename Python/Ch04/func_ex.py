# 동적 vs. 정적
# 동적 변수 : 이때까지 사용한 일반적인 변수
# 정적 변수 : 클래스의 멤버 변수
# 파이썬에서는 객체를 통하지 않고 사용할 수 있는 변수를 생성하는 것이 가능하다.
# 이들 변수는 모든 객체를 통틀어서 하나만 생성되고 모든 객체가 이것을 공유하게 된다.
# 이러한 변수를 정적 멤버 또는 클래스 멤버라고 한다.

# 사용자 입력
# 시스템에서의 입력 : 변수 = input("프롬프트") 기본적으로 문자열로 인식
# 파일을 통한 입력
#
# 사용자 출력 print()
# print("출력의 결합"+"*^__^%")
# print("a","b")
# print("%d"%(변수))
# print("{:}".format(변수))

# 선언(import, 변수선언) : import 모듈명[,모듈명, 모듈명 ... N]
# 입력 input은 입력되는 모든 것을 문자열로 취급한다.
# 입력한 문자열이 그대로 출력됩니다. 즉, input 함수는 사용자가 입력한 값을 가져오는 함수
# input().split()
#  : split() 내장함수는 문자열을 특정 구분자로 나누고 싶을 때 사용합니다.
# 가령 split(',')은 쉼표로 구분된 문자열을 나눌 때 사용하면 됩니다다.
# split()은 공백으로 되어있으니 띄어쓰기를 구분할 때 사용됩니다.
# str이라는 변수에 여러 입력값을 저장합니다.
# map()
#  : input().split()은 하나의 변수에 리스트의 형태로 저장됩니다.
# 여러 변수를 생성하여 각각의 값을 할당하고 싶을 땐 map()함수를 이용합니다.
# 주의할 점은 map()함수는 최소한 2개의 인자를 괄호안에 써줘야 한다.
# sys.stdin.readline()
#  : 대량의 데이터를 반복적으로 입력받아야 할 때, input()대신 sys.stdin.readline()을 이용하면 성능(속도)이 향상됩니다.
# 자바에서 Scanner보다 BufferedReader가 빠른것과 같은 맥락이다.
# 출력 print는 파이썬의 내장함수 중에 하나이다. print안의 문자열 값을 넣으면 결과가 출력된다.
# print함수 안에 숫자나 변수, 특정 클래스를 넣어도 값이 출력된다. (클래스 같은 경우에는 안에 함수가 정의되어 있어야 한다.)
#  - 문자열과 숫자 변수 조합 : print( "a={}".format(a) )
#  - 변수가 2개 : print( "a={}, b={}".format(a,b) )
#  - 소수점 출력 : print(format(a, "1.3f"))  /  print("값은 {:.2f}입니다.".format(a))
